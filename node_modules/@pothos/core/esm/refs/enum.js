function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    }
    else {
        obj[key] = value;
    }
    return obj;
}
import { inputShapeKey, outputShapeKey } from '../types/index.js';
import BaseTypeRef from './base.js';
let _outputShapeKey = outputShapeKey, _inputShapeKey = inputShapeKey;
class EnumRef extends BaseTypeRef {
    constructor(name) {
        super("Enum", name);
        _define_property(this, "kind", "Enum");
        _define_property(this, "$inferType", void 0);
        _define_property(this, "$inferInput", void 0);
        _define_property(this, _outputShapeKey, void 0);
        _define_property(this, _inputShapeKey, void 0);
    }
}
export { EnumRef as default };
//# sourceMappingURL=enum.js.map
